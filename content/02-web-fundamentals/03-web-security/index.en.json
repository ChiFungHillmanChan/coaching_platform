{
  "slug": "web-security-intro",
  "category": "web-fundamentals",
  "lastModified": "2025-09-06T00:00:00.000Z",
  "blocks": [
    {
      "type": "heading",
      "level": 1,
      "content": "2.3 Basic Web Security"
    },
    {
      "type": "text",
      "content": "Web development is not only about features ‚Äî security must also be prioritized. Without proper protection, user data may leak and the site could be compromised."
    },
    {
      "type": "horizontal-rule"
    },
    {
      "type": "line-break"
    },
    {
      "type": "heading",
      "level": 2,
      "content": "üíâ SQL Injection"
    },
    {
      "type": "text",
      "content": "Attackers inject malicious SQL statements into input fields to manipulate the database."
    },
    {
      "type": "list",
      "listType": "unordered",
      "items": [
        "**Example**: Entering `admin' OR '1'='1` in a login form to bypass authentication and log in directly.",
        "**Risk**: Unauthorized read, modification, or deletion of database content.",
        "**Prevention**: Use prepared statements (parameterized queries), validate inputs, apply least privilege."
      ]
    },
    {
      "type": "horizontal-rule"
    },
    {
      "type": "line-break"
    },
    {
      "type": "heading",
      "level": 2,
      "content": "üñºÔ∏è XSS (Cross-Site Scripting)"
    },
    {
      "type": "text",
      "content": "Attackers inject malicious scripts into a webpage, which execute in the browser when users visit the page."
    },
    {
      "type": "list",
      "listType": "unordered",
      "items": [
        "**Example**: Posting `<script>alert('Hacked!')</script>` in a comment section, which triggers an alert when others view the page.",
        "**Risk**: Stealing cookies, impersonating users, disrupting the interface.",
        "**Prevention**: Apply input/output encoding, use Content Security Policy (CSP), never fully trust user input."
      ]
    },
    {
      "type": "horizontal-rule"
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Why Avoid It?",
      "content": "SQL Injection and XSS are among the most common attacks, leading to **data leaks, loss of user trust, and even legal consequences**. Basic protections must be enforced."
    },
    {
      "type": "horizontal-rule"
    },
    {
      "type": "line-break"
    },
    {
      "type": "callout",
      "variant": "success",
      "title": "Key Takeaways",
      "content": "Security is not optional ‚Äî it‚Äôs essential. **Input validation, access control, and encrypted transmission** are required in every project."
    }
  ]
}

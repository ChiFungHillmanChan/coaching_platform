{
  "slug": "web-security-intro",
  "category": "web-fundamentals",
  "lastModified": "2025-09-06T00:00:00.000Z",
  "blocks": [
    {
      "type": "heading",
      "level": 1,
      "content": "2.3 基本網頁安全 (Web Security Intro)"
    },
    {
      "type": "text",
      "content": "網站開發不僅需要實現功能，還必須重視安全性。如果缺乏適當的防護，用戶資料可能外洩，網站亦可能遭受入侵。"
    },
    {
      "type": "horizontal-rule"
    },
    {
      "type": "line-break"
    },
    {
      "type": "heading",
      "level": 2,
      "content": "💉 SQL Injection"
    },
    {
      "type": "text",
      "content": "攻擊者透過在輸入框中注入惡意 SQL 語句，以操控資料庫。"
    },
    {
      "type": "list",
      "listType": "unordered",
      "items": [
        "**範例**: 在登入表單輸入 `admin' OR '1'='1`，即可繞過驗證直接登入。",
        "**風險**: 未經授權讀取、修改甚至刪除資料庫內容。",
        "**防護方法**: 使用 Prepared Statements（參數化查詢）、輸入驗證、最小權限原則。"
      ]
    },
    {
      "type": "horizontal-rule"
    },
    {
      "type": "line-break"
    },
    {
      "type": "heading",
      "level": 2,
      "content": "🖼️ XSS (Cross-Site Scripting)"
    },
    {
      "type": "text",
      "content": "攻擊者將惡意腳本注入網頁，當用戶瀏覽頁面時，該腳本會於瀏覽器中執行。"
    },
    {
      "type": "list",
      "listType": "unordered",
      "items": [
        "**範例**: 在留言區輸入 `<script>alert('Hacked!')</script>`，其他訪客打開頁面時會彈出提示框。",
        "**風險**: 竊取 Cookies、冒充用戶身分、破壞介面。",
        "**防護方法**: 進行輸入與輸出編碼（Input/Output Encoding）、使用 Content Security Policy (CSP)、避免直接信任用戶輸入。"
      ]
    },
    {
      "type": "horizontal-rule"
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "為何必須避免？",
      "content": "SQL Injection 與 XSS 是最常見的攻擊手法，可能造成 **資料外洩、用戶信任喪失，甚至引發法律責任**。基本防護措施必須落實。"
    },
    {
      "type": "horizontal-rule"
    },
    {
      "type": "line-break"
    },
    {
      "type": "callout",
      "variant": "success",
      "title": "學習重點",
      "content": "安全性不是額外選項，而是基本要求。**輸入驗證、權限管理、加密傳輸** 是任何專案的必備措施。"
    }
  ]
}
